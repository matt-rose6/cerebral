{"ast":null,"code":"import axios from 'axios';\n\nconst getUser = async id => {\n  let result = await axios({\n    method: 'get',\n    url: 'http://localhost:3001/api/users/getUser/'.concat(id) //change this url later\n\n  }).then(response => {\n    //console.log('[response data]: '.concat(response.data[0].firstname));\n    result = response.data[0].firstname;\n  }).catch(error => console.log(error));\n  return result;\n};\n\nconst createUser = (firstname, lastname, email, pass, outreach) => {\n  axios({\n    method: 'post',\n    url: 'http://localhost:3001/api/users/addUser',\n    data: {\n      \"firstname\": firstname,\n      \"lastname\": lastname,\n      \"email\": email,\n      \"pass\": pass,\n      \"outreach\": outreach\n    }\n  }).catch(error => console.log(error));\n};\n\nconst updateUser = (id, firstname, lastname, email, pass, outreach) => {\n  axios({\n    method: 'put',\n    url: 'http://localhost:3001/api/users/updateUser',\n    data: {\n      \"id\": id,\n      \"firstname\": firstname,\n      \"lastname\": lastname,\n      \"email\": email,\n      \"pass\": pass,\n      \"outreach\": outreach\n    }\n  }).catch(error => console.log(error));\n};\n\nexport { getUser, createUser, updateUser };","map":{"version":3,"sources":["/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/services/UserServices/userServices.js"],"names":["axios","getUser","id","result","method","url","concat","then","response","data","firstname","catch","error","console","log","createUser","lastname","email","pass","outreach","updateUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,MAAOC,EAAP,IAAc;AAC1B,MAAIC,MAAM,GAAG,MAAMH,KAAK,CAAC;AACrBI,IAAAA,MAAM,EAAE,KADa;AAErBC,IAAAA,GAAG,EAAE,2CAA2CC,MAA3C,CAAkDJ,EAAlD,CAFgB,CAEuC;;AAFvC,GAAD,CAAL,CAIlBK,IAJkB,CAIbC,QAAQ,IAAI;AACd;AACAL,IAAAA,MAAM,GAAGK,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBC,SAA1B;AACH,GAPkB,EAQlBC,KARkB,CAQZC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARG,CAAnB;AASA,SAAOT,MAAP;AACH,CAXD;;AAaA,MAAMY,UAAU,GAAG,CAACL,SAAD,EAAYM,QAAZ,EAAsBC,KAAtB,EAA6BC,IAA7B,EAAmCC,QAAnC,KAAgD;AAC/DnB,EAAAA,KAAK,CAAC;AACFI,IAAAA,MAAM,EAAE,MADN;AAEFC,IAAAA,GAAG,EAAE,yCAFH;AAGFI,IAAAA,IAAI,EAAE;AACF,mBAAaC,SADX;AAEF,kBAAYM,QAFV;AAGF,eAASC,KAHP;AAIF,cAAQC,IAJN;AAKF,kBAAYC;AALV;AAHJ,GAAD,CAAL,CAUGR,KAVH,CAUSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAVlB;AAWH,CAZD;;AAcA,MAAMQ,UAAU,GAAG,CAAClB,EAAD,EAAKQ,SAAL,EAAgBM,QAAhB,EAA0BC,KAA1B,EAAiCC,IAAjC,EAAuCC,QAAvC,KAAoD;AACnEnB,EAAAA,KAAK,CAAC;AACFI,IAAAA,MAAM,EAAE,KADN;AAEFC,IAAAA,GAAG,EAAE,4CAFH;AAGFI,IAAAA,IAAI,EAAE;AACF,YAAMP,EADJ;AAEF,mBAAaQ,SAFX;AAGF,kBAAYM,QAHV;AAIF,eAASC,KAJP;AAKF,cAAQC,IALN;AAMF,kBAAYC;AANV;AAHJ,GAAD,CAAL,CAWGR,KAXH,CAWSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAXlB;AAYH,CAbD;;AAeA,SAAQX,OAAR,EAAiBc,UAAjB,EAA6BK,UAA7B","sourcesContent":["import axios from 'axios'\n\nconst getUser = async (id) => {\n    let result = await axios({\n        method: 'get',\n        url: 'http://localhost:3001/api/users/getUser/'.concat(id), //change this url later\n    })\n    .then(response => {\n        //console.log('[response data]: '.concat(response.data[0].firstname));\n        result = response.data[0].firstname;\n    })\n    .catch(error => console.log(error));\n    return result\n}\n\nconst createUser = (firstname, lastname, email, pass, outreach) => {\n    axios({\n        method: 'post',\n        url: 'http://localhost:3001/api/users/addUser',\n        data: {\n            \"firstname\": firstname,\n            \"lastname\": lastname,\n            \"email\": email,\n            \"pass\": pass,\n            \"outreach\": outreach\n        }\n    }).catch(error => console.log(error));\n}\n\nconst updateUser = (id, firstname, lastname, email, pass, outreach) => {\n    axios({\n        method: 'put',\n        url: 'http://localhost:3001/api/users/updateUser',\n        data: {\n            \"id\": id,\n            \"firstname\": firstname,\n            \"lastname\": lastname,\n            \"email\": email,\n            \"pass\": pass,\n            \"outreach\": outreach\n        }\n    }).catch(error => console.log(error));\n}\n\nexport {getUser, createUser, updateUser}"]},"metadata":{},"sourceType":"module"}