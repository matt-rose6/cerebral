{"ast":null,"code":"var _jsxFileName = \"/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Content/Timeline/Timeline.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { getEntries } from '../../../../services/EntryServices/entryService';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)'\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize\n  },\n  block: {\n    display: 'block'\n  },\n  contentWrapper: {\n    margin: '40px 16px'\n  }\n});\n\nfunction Content(props) {\n  const {\n    classes\n  } = props;\n  const [timelineState, setTimelineState] = useState({\n    posts: []\n  });\n\n  const showEntries = () => {\n    let lst = React.createElement(Typography, {\n      color: \"textSecondary\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"No journal entries yet\");\n\n    if (localStorage.getItem('uid')) {\n      console.log(\"test\");\n      getEntries(localStorage.getItem('uid')).then(res => {\n        if (res && res.data.length > 0) {\n          console.log(res.data);\n          setTimelineState({\n            posts: res.data\n          });\n          console.log(timelineState.posts);\n          const lst = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, res.data.map(child => {\n            return React.createElement(\"li\", {\n              key: child.dates,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }, child.entry, child.dates);\n          }));\n          return React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, lst);\n        }\n      }); // if(temp && temp.data.length > 0) {\n      //   console.log(temp.data)\n      //   const lst = (\n      //     <div>\n      //     {temp.data.map((child) => {\n      //       return <li key={child.dates}>\n      //         {child.entry}\n      //         {child.dates}\n      //       </li>\n      //     })}\n      //     </div>\n      //   )\n      //   return <ul>{lst}</ul>\n      // }\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, lst);\n  };\n\n  return React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    className: classes.searchBar,\n    position: \"static\",\n    color: \"default\",\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(SearchIcon, {\n    className: classes.block,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    placeholder: \"Search by date\",\n    InputProps: {\n      disableUnderline: true,\n      className: classes.searchInput\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    title: \"Reload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(RefreshIcon, {\n    className: classes.block,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }))))))), React.createElement(\"div\", {\n    className: classes.contentWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, showEntries()));\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Content);","map":{"version":3,"sources":["/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Content/Timeline/Timeline.js"],"names":["React","useState","PropTypes","AppBar","Toolbar","Typography","Paper","Grid","TextField","Tooltip","IconButton","withStyles","SearchIcon","RefreshIcon","getEntries","styles","theme","paper","maxWidth","margin","overflow","searchBar","borderBottom","searchInput","fontSize","typography","block","display","contentWrapper","Content","props","classes","timelineState","setTimelineState","posts","showEntries","lst","localStorage","getItem","console","log","then","res","data","length","map","child","dates","entry","disableUnderline","className","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { getEntries } from '../../../../services/EntryServices/entryService';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  contentWrapper: {\n    margin: '40px 16px',\n  },\n});\n\nfunction Content(props) {\n  const { classes } = props;\n\n  const [ timelineState, setTimelineState ] = useState({\n    posts: []\n  });\n\n  const showEntries = () => {\n\n    let lst = (\n      <Typography color=\"textSecondary\" align=\"center\">\n        No journal entries yet\n      </Typography>\n    );\n    if(localStorage.getItem('uid')){\n      console.log(\"test\")\n      getEntries(localStorage.getItem('uid')).then(res => {\n        if(res && res.data.length > 0) {\n          console.log(res.data)\n          setTimelineState({posts: res.data})\n          console.log(timelineState.posts)\n          const lst = (\n            <div>\n            {res.data.map((child) => {\n              return <li key={child.dates}>\n                {child.entry}\n                {child.dates}\n              </li>\n            })}\n            </div>\n          )\n          return <ul>{lst}</ul>\n        }\n      })\n      // if(temp && temp.data.length > 0) {\n      //   console.log(temp.data)\n      //   const lst = (\n      //     <div>\n      //     {temp.data.map((child) => {\n      //       return <li key={child.dates}>\n      //         {child.entry}\n      //         {child.dates}\n      //       </li>\n      //     })}\n      //     </div>\n      //   )\n      //   return <ul>{lst}</ul>\n      // }\n    }\n  return <ul>{lst}</ul>;\n  } \n\n  return (\n    <Paper className={classes.paper}>\n      <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\n        <Toolbar>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <SearchIcon className={classes.block} color=\"inherit\" />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                fullWidth\n                placeholder=\"Search by date\"\n                InputProps={{\n                  disableUnderline: true,\n                  className: classes.searchInput,\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Reload\">\n                <IconButton>\n                  <RefreshIcon className={classes.block} color=\"inherit\" />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.contentWrapper}>\n        {showEntries()}\n        {/* <Typography color=\"textSecondary\" align=\"center\">\n          No journal entries yet\n        </Typography> */}\n      </div>\n    </Paper>\n  );\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Content);"]},"metadata":{},"sourceType":"module"}