{"ast":null,"code":"var _jsxFileName = \"/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Header/Header.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar'; //import Button from '@material-ui/core/Button';\n\nimport Grid from '@material-ui/core/Grid';\nimport HelpIcon from '@material-ui/icons/Help';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ProfilePic from \"../../../public/profile_pic_2.jpg\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { getUser } from '../../../services/UserServices/userServices';\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\n\nconst styles = theme => ({\n  secondaryBar: {\n    zIndex: 0\n  },\n  menuButton: {\n    marginLeft: -theme.spacing(1)\n  },\n  iconButtonAvatar: {\n    padding: 4\n  },\n  link: {\n    textDecoration: 'none',\n    color: lightColor,\n    '&:hover': {\n      color: theme.palette.common.white\n    }\n  },\n  button: {\n    borderColor: lightColor\n  }\n});\n\nfunction Header(props) {\n  const {\n    classes,\n    onDrawerToggle\n  } = props;\n  const [headerState, setHeaderState] = useState({\n    username: ''\n  });\n  useEffect(() => {\n    // const getUsername = () => Axios({\n    //   method: 'get',\n    //   url: 'http://localhost:3001/api/users/getUser/1',\n    // })\n    // .then(response => {\n    //   setHeaderState({\n    //     username: response.data[0].firstname\n    //   })\n    // })\n    // .catch(error => console.log(error));\n    // getUsername();\n    getUser(1).then(res => {\n      setHeaderState({\n        username: res.firstname\n      });\n    }); //console.log(user.firstname)\n  }, []);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    color: \"primary\",\n    position: \"sticky\",\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: onDrawerToggle,\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    className: classes.iconButtonAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    src: ProfilePic,\n    alt: \"My Avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })))))), React.createElement(AppBar, {\n    component: \"div\",\n    className: classes.secondaryBar,\n    color: \"primary\",\n    position: \"static\",\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"h5\",\n    component: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Welcome \" + headerState.username)), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    title: \"Help\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(HelpIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))))))), React.createElement(AppBar, {\n    component: \"div\",\n    className: classes.secondaryBar,\n    color: \"primary\",\n    position: \"static\",\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }));\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onDrawerToggle: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(Header);","map":{"version":3,"sources":["/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Header/Header.js"],"names":["React","useState","useEffect","PropTypes","AppBar","Avatar","Grid","HelpIcon","Hidden","IconButton","MenuIcon","Toolbar","Tooltip","Typography","ProfilePic","withStyles","getUser","lightColor","styles","theme","secondaryBar","zIndex","menuButton","marginLeft","spacing","iconButtonAvatar","padding","link","textDecoration","color","palette","common","white","button","borderColor","Header","props","classes","onDrawerToggle","headerState","setHeaderState","username","then","res","firstname","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\n//import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport HelpIcon from '@material-ui/icons/Help';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ProfilePic from \"../../../public/profile_pic_2.jpg\";\nimport { withStyles } from '@material-ui/core/styles';\nimport {getUser} from '../../../services/UserServices/userServices';\n\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\n\nconst styles = theme => ({\n  secondaryBar: {\n    zIndex: 0,\n  },\n  menuButton: {\n    marginLeft: -theme.spacing(1),\n  },\n  iconButtonAvatar: {\n    padding: 4,\n  },\n  link: {\n    textDecoration: 'none',\n    color: lightColor,\n    '&:hover': {\n      color: theme.palette.common.white,\n    },\n  },\n  button: {\n    borderColor: lightColor,\n  },\n});\n\nfunction Header(props) {\n  const { classes, onDrawerToggle } = props;\n\n  const [ headerState, setHeaderState ] = useState({\n    username:''\n  });\n\n  useEffect(() => {\n    // const getUsername = () => Axios({\n    //   method: 'get',\n    //   url: 'http://localhost:3001/api/users/getUser/1',\n    // })\n    // .then(response => {\n    //   setHeaderState({\n    //     username: response.data[0].firstname\n    //   })\n    // })\n    // .catch(error => console.log(error));\n    // getUsername();\n    getUser(1).then(res => {\n      setHeaderState({username: res.firstname})\n    })\n    //console.log(user.firstname)\n  }, []);\n  \n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\n        <Toolbar>\n          <Grid container spacing={1} alignItems=\"center\">\n            <Hidden smUp>\n              <Grid item>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={onDrawerToggle}\n                  className={classes.menuButton}\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Grid>\n            </Hidden>\n            <Grid item xs />\n            <Grid item>\n              <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\n                <Avatar src= {ProfilePic} alt=\"My Avatar\" />                                                                                                                                               \n              </IconButton>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <AppBar\n        component=\"div\"\n        className={classes.secondaryBar}\n        color=\"primary\"\n        position=\"static\"\n        elevation={0}\n      >\n        <Toolbar>\n          <Grid container alignItems=\"center\" spacing={1}>\n            <Grid item xs>\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\n                {\"Welcome \" + headerState.username}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Help\">\n                <IconButton color=\"inherit\">\n                  <HelpIcon />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <AppBar\n        component=\"div\"\n        className={classes.secondaryBar}\n        color=\"primary\"\n        position=\"static\"\n        elevation={0}\n      >\n      </AppBar>\n    </React.Fragment>\n  );\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onDrawerToggle: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Header);"]},"metadata":{},"sourceType":"module"}