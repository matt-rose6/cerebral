{"ast":null,"code":"var _jsxFileName = \"/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Navigator/Navigator.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport JournalIcon from '@material-ui/icons/Message';\nimport PeopleIcon from '@material-ui/icons/People';\nimport WriteIcon from '@material-ui/icons/Create';\nimport EmotionIcon from '@material-ui/icons/Mood';\nimport PatternIcon from '@material-ui/icons/AllInclusive';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { compose } from 'recompose';\nconst categories = [{\n  id: 'Menu',\n  children: [{\n    id: 'Entries',\n    icon: React.createElement(JournalIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }),\n    link: '/',\n    active: false\n  }, {\n    id: 'Add Entry',\n    icon: React.createElement(WriteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }),\n    link: 'entries',\n    active: false\n  }, {\n    id: 'Add Emotion',\n    icon: React.createElement(EmotionIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }),\n    link: 'emotions',\n    active: false\n  }, {\n    id: 'Thought Patterns',\n    icon: React.createElement(PatternIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }),\n    link: '',\n    active: false\n  }, {\n    id: 'Profile',\n    icon: React.createElement(PeopleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }),\n    link: '',\n    active: false\n  }]\n}];\n\nconst styles = theme => ({\n  categoryHeader: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  categoryHeaderPrimary: {\n    color: theme.palette.common.white\n  },\n  item: {\n    paddingTop: 1,\n    paddingBottom: 1,\n    color: 'rgba(255, 255, 255, 0.7)',\n    '&:hover,&:focus': {\n      backgroundColor: 'rgba(255, 255, 255, 0.08)'\n    }\n  },\n  itemCategory: {\n    backgroundColor: '#232f3e',\n    boxShadow: '0 -1px 0 #404854 inset',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  firebase: {\n    fontSize: 24,\n    color: theme.palette.common.white\n  },\n  itemActiveItem: {\n    color: '#4fc3f7'\n  },\n  itemPrimary: {\n    fontSize: 'inherit'\n  },\n  itemIcon: {\n    minWidth: 'auto',\n    marginRight: theme.spacing(2)\n  },\n  divider: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nfunction Navigator(props) {\n  const {\n    classes,\n    location: {\n      pathname\n    },\n    ...other\n  } = props; //console.log(pathname);\n\n  return React.createElement(Drawer, Object.assign({\n    variant: \"permanent\"\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(List, {\n    disablePadding: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    className: clsx(classes.firebase, classes.item, classes.itemCategory),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Cerebral\"), React.createElement(ListItem, {\n    className: clsx(classes.item, classes.itemCategory),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    className: classes.itemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(HomeIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    classes: {\n      primary: classes.itemPrimary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Home\")), categories.map(({\n    id,\n    children\n  }) => React.createElement(React.Fragment, {\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    className: classes.categoryHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    classes: {\n      primary: classes.categoryHeaderPrimary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, id)), children.map(({\n    id: childId,\n    icon,\n    link,\n    active\n  }) => React.createElement(ListItem, {\n    key: childId,\n    button: true,\n    component: Link,\n    to: link,\n    selected: pathname == link,\n    className: clsx(classes.item, active && classes.itemActiveItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    className: classes.itemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, icon), React.createElement(ListItemText, {\n    classes: {\n      primary: classes.itemPrimary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, childId))), React.createElement(Divider, {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })))));\n}\n\nNavigator.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default compose(withRouter, withStyles(styles))(Navigator);","map":{"version":3,"sources":["/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Navigator/Navigator.js"],"names":["React","useState","PropTypes","clsx","withStyles","Divider","Drawer","List","ListItem","ListItemIcon","ListItemText","HomeIcon","JournalIcon","PeopleIcon","WriteIcon","EmotionIcon","PatternIcon","Link","withRouter","compose","categories","id","children","icon","link","active","styles","theme","categoryHeader","paddingTop","spacing","paddingBottom","categoryHeaderPrimary","color","palette","common","white","item","backgroundColor","itemCategory","boxShadow","firebase","fontSize","itemActiveItem","itemPrimary","itemIcon","minWidth","marginRight","divider","marginTop","Navigator","props","classes","location","pathname","other","primary","map","childId","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport JournalIcon from '@material-ui/icons/Message'\nimport PeopleIcon from '@material-ui/icons/People';\nimport WriteIcon from '@material-ui/icons/Create';\nimport EmotionIcon from '@material-ui/icons/Mood';\nimport PatternIcon from '@material-ui/icons/AllInclusive';\nimport {Link} from 'react-router-dom';\nimport {withRouter} from 'react-router';\nimport {compose} from 'recompose';\n\nconst categories = [\n  {\n    id: 'Menu',\n    children: [\n      { id: 'Entries', icon: <JournalIcon />, link: '/', active: false },\n      { id: 'Add Entry', icon: <WriteIcon /> , link:'entries',  active: false},\n      { id: 'Add Emotion', icon: <EmotionIcon /> , link:'emotions', active: false},\n      { id: 'Thought Patterns', icon: <PatternIcon /> , link:'', active: false},\n      { id: 'Profile', icon: <PeopleIcon />, link: '', active: false }\n    ],\n  },\n];\n\nconst styles = theme => ({\n  categoryHeader: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  categoryHeaderPrimary: {\n    color: theme.palette.common.white,\n  },\n  item: {\n    paddingTop: 1,\n    paddingBottom: 1,\n    color: 'rgba(255, 255, 255, 0.7)',\n    '&:hover,&:focus': {\n      backgroundColor: 'rgba(255, 255, 255, 0.08)',\n    },\n  },\n  itemCategory: {\n    backgroundColor: '#232f3e',\n    boxShadow: '0 -1px 0 #404854 inset',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  firebase: {\n    fontSize: 24,\n    color: theme.palette.common.white,\n  },\n  itemActiveItem: {\n    color: '#4fc3f7',\n  },\n  itemPrimary: {\n    fontSize: 'inherit',\n  },\n  itemIcon: {\n    minWidth: 'auto',\n    marginRight: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n  },\n});\n\nfunction Navigator(props) {\n  const { classes, location: {pathname}, ...other } = props;\n  //console.log(pathname);\n\n  return (\n    <Drawer variant=\"permanent\" {...other}>\n      <List disablePadding>\n        <ListItem className={clsx(classes.firebase, classes.item, classes.itemCategory)}>\n          Cerebral\n        </ListItem>\n        <ListItem className={clsx(classes.item, classes.itemCategory)}>\n          <ListItemIcon className={classes.itemIcon}>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText\n            classes={{\n              primary: classes.itemPrimary,\n            }}\n          >\n            Home\n          </ListItemText>\n        </ListItem>\n        {categories.map(({ id, children }) => (\n          <React.Fragment key={id}>\n            <ListItem className={classes.categoryHeader}>\n              <ListItemText\n                classes={{\n                  primary: classes.categoryHeaderPrimary,\n                }}\n              >\n                {id}\n              </ListItemText>\n            </ListItem>\n            {children.map(({ id: childId, icon, link, active }) => (\n              <ListItem\n                key={childId}\n                button\n                component={Link}\n                to = {link}\n                selected = {pathname == link}\n                className={clsx(classes.item, active && classes.itemActiveItem)}\n              >\n                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\n                <ListItemText\n                  classes={{\n                    primary: classes.itemPrimary,\n                  }}\n                >\n                  {childId}\n                </ListItemText>\n              </ListItem>\n            ))}\n\n            <Divider className={classes.divider} />\n          </React.Fragment>\n        ))}\n      </List>\n    </Drawer>\n  );\n}\n\nNavigator.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default compose(\n  withRouter,\n  withStyles(styles)\n)(Navigator)"]},"metadata":{},"sourceType":"module"}