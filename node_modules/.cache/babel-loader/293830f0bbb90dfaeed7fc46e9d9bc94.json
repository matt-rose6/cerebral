{"ast":null,"code":"import _slicedToArray from\"/Users/codeplus/Desktop/Cerebral/cerebral-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import AppBar from'@material-ui/core/AppBar';//import Avatar from '@material-ui/core/Avatar';\n//import Button from '@material-ui/core/Button';\nimport Grid from'@material-ui/core/Grid';import HelpIcon from'@material-ui/icons/Help';import Hidden from'@material-ui/core/Hidden';import IconButton from'@material-ui/core/IconButton';import MenuIcon from'@material-ui/icons/Menu';import Toolbar from'@material-ui/core/Toolbar';import Tooltip from'@material-ui/core/Tooltip';import Typography from'@material-ui/core/Typography';//import ProfilePic from \"../../../public/profile_pic_2.jpg\";\nimport{withStyles}from'@material-ui/core/styles';import{getUser}from'../../../services/UserServices/userServices';var lightColor='rgba(255, 255, 255, 0.7)';var styles=function styles(theme){return{secondaryBar:{zIndex:0},menuButton:{marginLeft:-theme.spacing(1)},iconButtonAvatar:{padding:4},link:{textDecoration:'none',color:lightColor,'&:hover':{color:theme.palette.common.white}},button:{borderColor:lightColor}};};function Header(props){var classes=props.classes,onDrawerToggle=props.onDrawerToggle;var _useState=useState({username:''}),_useState2=_slicedToArray(_useState,2),headerState=_useState2[0],setHeaderState=_useState2[1];useEffect(function(){console.log(localStorage.getItem('uid'));getUser(localStorage.getItem('uid')).then(function(res){setHeaderState({username:res.firstname});});},[]);return React.createElement(React.Fragment,null,React.createElement(AppBar,{color:\"primary\",position:\"sticky\",elevation:0},React.createElement(Toolbar,null,React.createElement(Grid,{container:true,spacing:1,alignItems:\"center\"},React.createElement(Hidden,{smUp:true},React.createElement(Grid,{item:true},React.createElement(IconButton,{color:\"inherit\",\"aria-label\":\"open drawer\",onClick:onDrawerToggle,className:classes.menuButton},React.createElement(MenuIcon,null))))))),React.createElement(AppBar,{component:\"div\",className:classes.secondaryBar,color:\"primary\",position:\"static\",elevation:0},React.createElement(Toolbar,null,React.createElement(Grid,{container:true,alignItems:\"center\",spacing:1},React.createElement(Grid,{item:true,xs:true},React.createElement(Typography,{color:\"inherit\",variant:\"h5\",component:\"h1\"},\"Welcome \"+headerState.username)),React.createElement(Grid,{item:true},React.createElement(Tooltip,{title:\"Help\"},React.createElement(IconButton,{color:\"inherit\"},React.createElement(HelpIcon,null))))))),React.createElement(AppBar,{component:\"div\",className:classes.secondaryBar,color:\"primary\",position:\"static\",elevation:0}));}export default withStyles(styles)(Header);","map":{"version":3,"sources":["/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Header/Header.js"],"names":["React","useState","useEffect","AppBar","Grid","HelpIcon","Hidden","IconButton","MenuIcon","Toolbar","Tooltip","Typography","withStyles","getUser","lightColor","styles","theme","secondaryBar","zIndex","menuButton","marginLeft","spacing","iconButtonAvatar","padding","link","textDecoration","color","palette","common","white","button","borderColor","Header","props","classes","onDrawerToggle","username","headerState","setHeaderState","console","log","localStorage","getItem","then","res","firstname"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\n//import Avatar from '@material-ui/core/Avatar';\n//import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport HelpIcon from '@material-ui/icons/Help';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n//import ProfilePic from \"../../../public/profile_pic_2.jpg\";\nimport { withStyles } from '@material-ui/core/styles';\nimport {getUser} from '../../../services/UserServices/userServices';\n\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\n\nconst styles = theme => ({\n  secondaryBar: {\n    zIndex: 0,\n  },\n  menuButton: {\n    marginLeft: -theme.spacing(1),\n  },\n  iconButtonAvatar: {\n    padding: 4,\n  },\n  link: {\n    textDecoration: 'none',\n    color: lightColor,\n    '&:hover': {\n      color: theme.palette.common.white,\n    },\n  },\n  button: {\n    borderColor: lightColor,\n  },\n});\n\nfunction Header(props) {\n  const { classes, onDrawerToggle } = props;\n\n  const [ headerState, setHeaderState ] = useState({\n    username:''\n  });\n\n  useEffect(() => {\n    console.log(localStorage.getItem('uid'))\n    getUser(localStorage.getItem('uid')).then(res => {\n      setHeaderState({username: res.firstname})\n    })\n  }, []);\n  \n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\n        <Toolbar>\n          <Grid container spacing={1} alignItems=\"center\">\n            <Hidden smUp>\n              <Grid item>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={onDrawerToggle}\n                  className={classes.menuButton}\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Grid>\n            </Hidden>\n          {/* <Grid item xs />\n            <Grid item>\n              <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\n                <Avatar src= {ProfilePic} alt=\"My Avatar\" />                                                                                                                                               \n              </IconButton>\n          </Grid> */}\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <AppBar\n        component=\"div\"\n        className={classes.secondaryBar}\n        color=\"primary\"\n        position=\"static\"\n        elevation={0}\n      >\n        <Toolbar>\n          <Grid container alignItems=\"center\" spacing={1}>\n            <Grid item xs>\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\n                {\"Welcome \" + headerState.username}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Help\">\n                <IconButton color=\"inherit\">\n                  <HelpIcon />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <AppBar\n        component=\"div\"\n        className={classes.secondaryBar}\n        color=\"primary\"\n        position=\"static\"\n        elevation={0}\n      >\n      </AppBar>\n    </React.Fragment>\n  );\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onDrawerToggle: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Header);"]},"metadata":{},"sourceType":"module"}