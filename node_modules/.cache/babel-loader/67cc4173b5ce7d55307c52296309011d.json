{"ast":null,"code":"var _jsxFileName = \"/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Content/Entries/Entries.js\";\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { createEntry } from '../../../../services/EntryServices/entryService';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  enterBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n    alignItems: 'center'\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize\n  },\n  block: {\n    display: 'block'\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '115ch'\n    }\n  }\n});\n\nconst handleAddEntry = text => {\n  var tempDate = new Date();\n  var date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate() + ' ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds();\n  createEntry(localStorage.getItem('uid'), date, text);\n};\n\nfunction Entries(props) {\n  const {\n    classes\n  } = props;\n  const [text, setText] = useState(\"\");\n  return React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-multiline-static\",\n    label: \"New Entry\",\n    multiline: true,\n    rows: \"10\",\n    onChange: event => setText(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(AppBar, {\n    className: classes.enterBar,\n    position: \"static\",\n    color: \"default\",\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      handleAddEntry(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Add entry\"))))));\n}\n\nEntries.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Entries);","map":{"version":3,"sources":["/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Content/Entries/Entries.js"],"names":["React","useState","Axios","PropTypes","AppBar","Toolbar","Paper","Grid","Button","TextField","withStyles","createEntry","styles","theme","paper","maxWidth","margin","overflow","enterBar","borderBottom","alignItems","searchInput","fontSize","typography","block","display","root","spacing","width","handleAddEntry","text","tempDate","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","localStorage","getItem","Entries","props","classes","setText","event","target","value","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,QAA4B,iDAA5B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,GADL;AAELC,IAAAA,MAAM,EAAE,MAFH;AAGLC,IAAAA,QAAQ,EAAE;AAHL,GADgB;AAMvBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,+BADN;AAERC,IAAAA,UAAU,EAAE;AAFJ,GANa;AAUvBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAET,KAAK,CAACU,UAAN,CAAiBD;AADhB,GAVU;AAavBE,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE;AADJ,GAbgB;AAgBvBC,EAAAA,IAAI,EAAE;AACJ,4BAAwB;AACtBV,MAAAA,MAAM,EAAEH,KAAK,CAACc,OAAN,CAAc,CAAd,CADc;AAEtBC,MAAAA,KAAK,EAAE;AAFe;AADpB;AAhBiB,CAAL,CAApB;;AAwBA,MAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/B,MAAIC,QAAQ,GAAG,IAAIC,IAAJ,EAAf;AACA,MAAIC,IAAI,GAAGF,QAAQ,CAACG,WAAT,KAAyB,GAAzB,IAAgCH,QAAQ,CAACI,QAAT,KAAoB,CAApD,IAAyD,GAAzD,GAA+DJ,QAAQ,CAACK,OAAT,EAA/D,GAAmF,GAAnF,GAAwFL,QAAQ,CAACM,QAAT,EAAxF,GAA4G,GAA5G,GAAiHN,QAAQ,CAACO,UAAT,EAAjH,GAAuI,GAAvI,GAA4IP,QAAQ,CAACQ,UAAT,EAAvJ;AACA5B,EAAAA,WAAW,CAAC6B,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAD,EAA8BR,IAA9B,EAAoCH,IAApC,CAAX;AACD,CAJD;;AAMA,SAASY,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AAEA,QAAM,CAACb,IAAD,EAAOe,OAAP,IAAkB5C,QAAQ,CAAC,EAAD,CAAhC;AAEA,SACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE2C,OAAO,CAAC9B,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE8B,OAAO,CAAClB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,2BADL;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,IAAI,EAAC,IAJP;AAKE,IAAA,QAAQ,EAAGoB,KAAD,IAAUD,OAAO,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAUE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEJ,OAAO,CAAC1B,QAA3B;AAAqC,IAAA,QAAQ,EAAC,QAA9C;AAAuD,IAAA,KAAK,EAAC,SAA7D;AAAuE,IAAA,SAAS,EAAE,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,UAAU,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAE,MAAM;AAACW,MAAAA,cAAc,CAACC,IAAD,CAAd;AAAqB,KAHvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,CADF,CADF,CAVF,CADF;AA2BD;;AAEDY,OAAO,CAACO,SAAR,GAAoB;AAClBL,EAAAA,OAAO,EAAEzC,SAAS,CAAC+C,MAAV,CAAiBC;AADR,CAApB;AAIA,eAAezC,UAAU,CAACE,MAAD,CAAV,CAAmB8B,OAAnB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport Axios from 'axios';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { createEntry } from '../../../../services/EntryServices/entryService';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  enterBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n    alignItems: 'center',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '115ch',\n    },\n  },\n});\n\nconst handleAddEntry = (text) => {\n  var tempDate = new Date();\n  var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() +' '+ tempDate.getHours()+':'+ tempDate.getMinutes()+':'+ tempDate.getSeconds();\n  createEntry(localStorage.getItem('uid'), date, text);\n};\n\nfunction Entries(props) {\n  const { classes } = props;\n\n  const [text, setText] = useState(\"\");\n\n  return (\n    <Paper className={classes.paper}>\n      <div className={classes.root}>\n        <TextField\n          id=\"standard-multiline-static\"\n          label=\"New Entry\"\n          multiline\n          rows=\"10\"\n          onChange={(event)=> setText(event.target.value)}\n        />\n      </div>\n      <AppBar className={classes.enterBar} position=\"static\" color=\"default\" elevation={0}>\n        <Toolbar>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <Button\n                variant=\"contained\" \n                color=\"primary\" \n                onClick={() => {handleAddEntry(text)}}>\n                  Add entry\n              </Button>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </Paper>\n  );\n}\n\nEntries.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Entries);"]},"metadata":{},"sourceType":"module"}