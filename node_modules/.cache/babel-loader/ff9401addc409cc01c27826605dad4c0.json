{"ast":null,"code":"var _jsxFileName = \"/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Content/Settings/Boxes/EditBox.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { TextField, Checkbox, FormControlLabel } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getUser } from '../../../../../services/UserServices/userServices';\nimport { updateUser } from '../../../../../services/UserServices/userServices';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n    marginBottom: '10px'\n  },\n  root: {\n    margin: theme.spacing(1),\n    marginTop: '12px',\n    marginLeft: '20px'\n  },\n  enterBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n    alignItems: 'flex-end'\n  }\n});\n\nfunction EditBox(props) {\n  const {\n    classes\n  } = props;\n  const [editBoxState, setBoxState] = useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    pass: '',\n    outreach: false,\n    errors: []\n  });\n  useEffect(() => {\n    if (localStorage.getItem('uid')) {\n      getUser(localStorage.getItem('uid')).then(res => {\n        const user = res.data[0];\n        if (res) setBoxState({\n          firstname: user.firstname,\n          lastname: user.lastname,\n          email: user.email,\n          pass: user.pass,\n          outreach: user.outreach\n        });\n      });\n    }\n  }, []);\n\n  const handleSubmit = () => {\n    var temp = [...this.state.errors];\n    if (this.state.firstname.length === 0) temp[0] = true;else temp[0] = false;\n    if (this.state.lastname.length === 0) temp[1] = true;else temp[1] = false;\n    if (!this.validateEmail(this.state.email)) temp[2] = true;\n    console.log(editBoxState);\n\n    if (localStorage.getItem('uid')) {\n      updateUser(localStorage.getItem('uid'), editBoxState.firstname, editBoxState.lastname, editBoxState.email, editBoxState.pass, editBoxState.outreach).then(() => {\n        window.location.reload(false);\n      });\n    }\n  };\n\n  const handleCheckBox = () => {\n    const temp = !editBoxState.outreach;\n    setBoxState({ ...editBoxState,\n      outreach: temp\n    });\n  };\n\n  return React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: editBoxState.firstname || '',\n    fullWidth: true,\n    onChange: event => setBoxState({ ...editBoxState,\n      firstname: event.target.value\n    }) //double check this syntax\n    ,\n    label: \"First Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    value: editBoxState.lastname || '',\n    fullWidth: true,\n    onChange: event => setBoxState({ ...editBoxState,\n      lastname: event.target.value\n    }),\n    label: \"Last Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    value: editBoxState.email || '',\n    fullWidth: true,\n    color: \"primary\",\n    onChange: event => setBoxState({ ...editBoxState,\n      email: event.target.value\n    }),\n    label: \"Email Address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: editBoxState.outreach,\n      onClick: handleCheckBox,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }),\n    label: \"Email preferences: \" + editBoxState.outreach ? \"Subscribed to notifications and reminders\" : \"Not subscribed to notifications or reminders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(AppBar, {\n    className: classes.enterBar,\n    position: \"static\",\n    color: \"default\",\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Done\"), React.createElement(Button, {\n    variant: \"contained\",\n    onClick: props.toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Cancel\"))))));\n}\n\nexport default withStyles(styles)(EditBox);","map":{"version":3,"sources":["/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Content/Settings/Boxes/EditBox.js"],"names":["React","useState","useEffect","Button","Paper","Grid","AppBar","Toolbar","TextField","Checkbox","FormControlLabel","withStyles","getUser","updateUser","styles","theme","paper","maxWidth","margin","overflow","marginBottom","root","spacing","marginTop","marginLeft","enterBar","borderBottom","alignItems","EditBox","props","classes","editBoxState","setBoxState","firstname","lastname","email","pass","outreach","errors","localStorage","getItem","then","res","user","data","handleSubmit","temp","state","length","validateEmail","console","log","window","location","reload","handleCheckBox","event","target","value","toggle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { TextField, Checkbox, FormControlLabel } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getUser } from '../../../../../services/UserServices/userServices';\nimport { updateUser } from '../../../../../services/UserServices/userServices';\n\nconst styles = theme => ({\n    paper: {\n      maxWidth: 936,\n      margin: 'auto',\n      overflow: 'hidden',\n      marginBottom: '10px',\n    },\n      root: {\n        margin: theme.spacing(1),\n        marginTop: '12px',\n        marginLeft: '20px',\n    },\n    enterBar: {\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n        alignItems: 'flex-end',\n      },\n  });\n\nfunction EditBox(props){\n    const {classes} =  props;\n\n    const [ editBoxState, setBoxState ] = useState({\n        firstname: '',\n        lastname: '',\n        email: '',\n        pass: '',\n        outreach: false,\n        errors: []\n    });\n\n    useEffect(() => {\n        if(localStorage.getItem('uid')){\n          getUser(localStorage.getItem('uid')).then(res => {\n            const user=res.data[0];\n            if(res) setBoxState({firstname: user.firstname, lastname: user.lastname, email: user.email, pass: user.pass, outreach: user.outreach})\n          })\n        }\n    }, []);\n\n    const handleSubmit = () => {\n        var temp = [...this.state.errors];\n        if(this.state.firstname.length===0) temp[0] = true;\n        else temp[0] = false; \n        if(this.state.lastname.length===0) temp[1] = true;\n        else temp[1] = false;\n        if(!this.validateEmail(this.state.email)) temp[2] = true;\n        console.log(editBoxState);\n        if(localStorage.getItem('uid')){\n            updateUser(localStorage.getItem('uid'), editBoxState.firstname, editBoxState.lastname, editBoxState.email, editBoxState.pass, editBoxState.outreach).then(()=> {\n                window.location.reload(false);\n            })\n        }\n    }\n\n    const handleCheckBox = () => {\n        const temp = !editBoxState.outreach;\n        setBoxState({...editBoxState, outreach: temp});\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <div className= {classes.root}>\n                <TextField value={editBoxState.firstname || ''} \n                    fullWidth \n                    onChange={(event)=>setBoxState({...editBoxState, firstname: event.target.value})} //double check this syntax\n                    label=\"First Name\"/> \n                <TextField value={editBoxState.lastname || ''} \n                    fullWidth \n                    onChange={(event)=>setBoxState({...editBoxState, lastname: event.target.value})}\n                    label=\"Last Name\"/>\n                <TextField value={editBoxState.email || ''} \n                    fullWidth\n                    color=\"primary\"\n                    onChange={(event)=>setBoxState({...editBoxState, email: event.target.value})}\n                    label=\"Email Address\"/>  \n                <FormControlLabel \n                    control={<Checkbox \n                        checked={editBoxState.outreach} \n                        onClick={handleCheckBox}\n                        color=\"primary\" />} \n                    label={\"Email preferences: \" + editBoxState.outreach? \"Subscribed to notifications and reminders\": \"Not subscribed to notifications or reminders\"} />\n            </div>\n            <AppBar className={classes.enterBar} position=\"static\" color=\"default\" elevation={0}>\n                <Toolbar>\n                    <Grid container spacing={2}>\n                        <Grid item>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleSubmit}>\n                                Done\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                onClick={props.toggle}>\n                                Cancel\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        </Paper>\n    )\n}\n\nexport default withStyles(styles)(EditBox);"]},"metadata":{},"sourceType":"module"}