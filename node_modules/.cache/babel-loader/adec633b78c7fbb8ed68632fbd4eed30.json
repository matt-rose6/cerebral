{"ast":null,"code":"var _jsxFileName = \"/Users/codeplus/Desktop/Cerebral/cerebral/src/pages/Home/Emotions/Emotions.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar'; //import Typography from '@material-ui/core/Typography';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider'; //import Tooltip from '@material-ui/core/Tooltip';\n//import IconButton from '@material-ui/core/IconButton';\n\nimport { withStyles } from '@material-ui/core/styles'; //import SearchIcon from '@material-ui/icons/Search';\n//import RefreshIcon from '@material-ui/icons/Refresh';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)'\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize\n  },\n  block: {\n    display: 'block'\n  },\n  addEntry: {\n    marginRight: theme.spacing(1)\n  },\n  root: {\n    width: 300\n  }\n});\n\nconst marks = [{\n  value: 0,\n  label: 'Not at all'\n}, {\n  value: 1,\n  label: 'Several days'\n}, {\n  value: 2,\n  label: 'More than half the days'\n}, {\n  value: 3,\n  label: 'Nearly every day'\n}];\n\nfunction valueLabelFormat(value) {\n  return marks.findIndex(mark => mark.value === value) + 1;\n}\n\nfunction Emotions(props) {\n  const {\n    classes\n  } = props;\n  return React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    className: classes.searchBar,\n    position: \"static\",\n    color: \"default\",\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.addEntry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Add entry\"))))), React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Slider, {\n    defaultValue: 0,\n    valueLabelFormat: valueLabelFormat,\n    getAriaValueText: valuetext,\n    \"aria-labelledby\": \"discrete-slider-restrict\",\n    step: null,\n    valueLabelDisplay: \"auto\",\n    marks: marks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })));\n}\n\nEmotions.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Emotions);","map":{"version":3,"sources":["/Users/codeplus/Desktop/Cerebral/cerebral/src/pages/Home/Emotions/Emotions.js"],"names":["React","PropTypes","AppBar","Toolbar","Paper","Grid","Button","TextField","Slider","withStyles","styles","theme","paper","maxWidth","margin","overflow","searchBar","borderBottom","searchInput","fontSize","typography","block","display","addEntry","marginRight","spacing","root","width","marks","value","label","valueLabelFormat","findIndex","mark","Emotions","props","classes","valuetext","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n//import Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\n//import Tooltip from '@material-ui/core/Tooltip';\n//import IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\n//import SearchIcon from '@material-ui/icons/Search';\n//import RefreshIcon from '@material-ui/icons/Refresh';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  addEntry: {\n    marginRight: theme.spacing(1),\n  },\n  root: {\n    width: 300,\n  },\n});\n\nconst marks = [\n  {\n    value: 0,\n    label: 'Not at all',\n  },\n  {\n    value: 1,\n    label: 'Several days',\n  },\n  {\n    value: 2,\n    label: 'More than half the days',\n  },\n  {\n    value: 3,\n    label: 'Nearly every day',\n  },\n];\n\nfunction valueLabelFormat(value) {\n  return marks.findIndex(mark => mark.value === value) + 1;\n}\n\nfunction Emotions(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.paper}>\n      <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\n        <Toolbar>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <Button variant=\"contained\" color=\"primary\" className={classes.addEntry}>\n                Add entry\n              </Button>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.root}>\n        <Slider\n  \t\t\tdefaultValue={0}\n  \t\t\tvalueLabelFormat={valueLabelFormat}\n  \t\t\tgetAriaValueText={valuetext}\n  \t\t\taria-labelledby=\"discrete-slider-restrict\"\n  \t\t\tstep={null}\n  \t\t\tvalueLabelDisplay=\"auto\"\n \t \t\tmarks={marks}\n\t\t/>\n      </div>\n    </Paper>\n  );\n}\n\nEmotions.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Emotions);"]},"metadata":{},"sourceType":"module"}