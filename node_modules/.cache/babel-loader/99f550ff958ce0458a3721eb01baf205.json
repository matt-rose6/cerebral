{"ast":null,"code":"var _jsxFileName = \"/Users/codeplus/Desktop/Cerebral/cerebral/src/pages/SignUp.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport BrainIcon from './public/cerebralicon.png';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useHistory } from 'react-router-dom'; //import Style from '../App.css';\n//import Avatar from '@material-ui/core/Avatar';\n\nfunction Copyright() {\n  return React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, 'Copyright Â© ', React.createElement(Link, {\n    color: \"inherit\",\n    href: \"https://github.com/matt-rose6/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Matthew Rose,\"), ' ', new Date().getFullYear(), '.');\n}\n\nconst useStyles = theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\nclass SignUp extends Component {\n  //let history = useHistory()\n  // const [ signUpState, setSignUpState ] = useState({\n  //   firstname: '',\n  //   lastname: '',\n  //   email: '',\n  //   password: '',\n  //   outreach: 'FALSE'\n  // });\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = () => {\n      Axios({\n        method: 'post',\n        url: 'http://localhost:3001/api/users/addUser',\n        data: {\n          \"firstname\": this.state.firstname,\n          \"lastname\": this.state.lastname,\n          \"email\": this.state.email,\n          \"pass\": this.state.password,\n          \"outreach\": this.state.outreach\n        }\n      });\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.state = {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      outreach: false,\n      redirect: false\n    };\n  } //const classes = useStyles();\n\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    if (this.state.redirect) return React.createElement(Redirect, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    });\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        width: '75px',\n        height: '75px'\n      },\n      src: BrainIcon,\n      alt: \"Cerebral Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      autoComplete: \"fname\",\n      name: \"firstName\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"firstName\",\n      label: \"First Name\",\n      autoFocus: true,\n      onChange: event => setSignUpState({\n        firstname: event.target.value,\n        lastname: signUpState.lastname,\n        email: signUpState.email,\n        password: signUpState.password,\n        outreach: signUpState.outreach\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"lastName\",\n      label: \"Last Name\",\n      name: \"lastName\",\n      autoComplete: \"lname\",\n      onChange: event => setSignUpState({\n        firstname: signUpState.firstname,\n        lastname: event.target.value,\n        email: signUpState.email,\n        password: signUpState.password,\n        outreach: signUpState.outreach\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      onChange: event => setSignUpState({\n        firstname: signUpState.firstname,\n        lastname: signUpState.lastname,\n        email: event.target.value,\n        password: signUpState.password,\n        outreach: signUpState.outreach\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      onChange: event => setSignUpState({\n        firstname: signUpState.firstname,\n        lastname: signUpState.lastname,\n        email: signUpState.email,\n        password: event.target.value,\n        outreach: signUpState.outreach\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        value: \"allowExtraEmails\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }),\n      label: \"I want to receive journaling reminders and updates via email\",\n      onChange: event => setSignUpState({\n        firstname: signUpState.firstname,\n        lastname: signUpState.lastname,\n        email: signUpState.email,\n        password: signUpState.password,\n        outreach: event.target.checked\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      onClick: handleSubmit //href=\"home\"\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"/\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Already have an account? Sign in\"))))), React.createElement(Box, {\n      mt: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Copyright, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/codeplus/Desktop/Cerebral/cerebral/src/pages/SignUp.js"],"names":["React","Component","Axios","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","BrainIcon","Typography","makeStyles","Container","useHistory","Copyright","Date","getFullYear","useStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","SignUp","constructor","props","handleSubmit","method","url","data","state","firstname","lastname","email","password","outreach","setState","redirect","render","classes","height","event","setSignUpState","target","value","signUpState","checked"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport BrainIcon from './public/cerebralicon.png';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useHistory } from 'react-router-dom';\n//import Style from '../App.css';\n//import Avatar from '@material-ui/core/Avatar';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://github.com/matt-rose6/\">\n        Matthew Rose,\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nclass SignUp extends Component {\n\n  //let history = useHistory()\n\n  // const [ signUpState, setSignUpState ] = useState({\n  //   firstname: '',\n  //   lastname: '',\n  //   email: '',\n  //   password: '',\n  //   outreach: 'FALSE'\n  // });\n\n  constructor(props){\n    super(props);\n    this.state = {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      outreach: false,\n      redirect: false\n    }\n  }\n\n  //const classes = useStyles();\n\n  handleSubmit = () => {\n    Axios({\n      method: 'post',\n      url: 'http://localhost:3001/api/users/addUser',\n      data: {\n        \"firstname\": this.state.firstname,\n        \"lastname\": this.state.lastname,\n        \"email\": this.state.email,\n        \"pass\": this.state.password,\n        \"outreach\": this.state.outreach\n      }\n    })\n    this.setState({ redirect: true });\n  };\n\n\n  render() {\n    const {classes} = this.props;\n    if(this.state.redirect) return <Redirect to='/home'/>;\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          {/*<Avatar className={classes.avatar}>*/}\n            {/*<BrainIcon />*/}\n            <img style={{width: '75px', height: '75px'}} src={BrainIcon} alt = \"Cerebral Logo\"/>\n            {/*</Avatar>*/}\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign Up\n            </Typography>\n            <form className={classes.form} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete=\"fname\"\n                    name=\"firstName\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"firstName\"\n                    label=\"First Name\"\n                    autoFocus\n                    onChange={(event) => setSignUpState({\n                      firstname: event.target.value,\n                      lastname: signUpState.lastname,\n                      email: signUpState.email,\n                      password: signUpState.password,\n                      outreach: signUpState.outreach\n                    })}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"lastName\"\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    autoComplete=\"lname\"\n                    onChange={(event) => setSignUpState({\n                      firstname: signUpState.firstname,\n                      lastname: event.target.value,\n                      email: signUpState.email,\n                      password: signUpState.password,\n                      outreach: signUpState.outreach\n                    })}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    onChange={(event) => setSignUpState({\n                      firstname: signUpState.firstname,\n                      lastname: signUpState.lastname,\n                      email: event.target.value,\n                      password: signUpState.password,\n                      outreach: signUpState.outreach\n                    })}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={(event) => setSignUpState({\n                      firstname: signUpState.firstname,\n                      lastname: signUpState.lastname,\n                      email: signUpState.email,\n                      password: event.target.value,\n                      outreach: signUpState.outreach\n                    })}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                    label=\"I want to receive journaling reminders and updates via email\"\n                    onChange={(event) => setSignUpState({\n                      firstname: signUpState.firstname,\n                      lastname: signUpState.lastname,\n                      email: signUpState.email,\n                      password: signUpState.password,\n                      outreach: event.target.checked\n                    })}\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={handleSubmit}\n                //href=\"home\"\n              >\n                Sign Up\n              </Button>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"/\" variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n          <Box mt={5}>\n            <Copyright />\n          </Box>\n        </Container>\n      );\n  }\n}\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}