{"ast":null,"code":"var _jsxFileName = \"/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Content/Settings/Settings.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getUser } from '../../../../services/UserServices/userServices';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n    marginBottom: '10px'\n  },\n  root: {\n    margin: theme.spacing(1),\n    marginTop: '12px',\n    marginLeft: '20px'\n  },\n  enterBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n    alignItems: 'flex-end'\n  }\n});\n\nfunction Settings(props) {\n  const {\n    classes\n  } = props;\n  const [settingState, setSettingState] = useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    showEditBox: false,\n    outreach: false\n  });\n  useEffect(() => {\n    if (localStorage.getItem('uid')) {\n      getUser(localStorage.getItem('uid')).then(res => {\n        const user = res.data[0];\n        if (res) setSettingState({\n          firstname: user.firstname,\n          lastname: user.lastname,\n          email: user.email,\n          outreach: user.outreach\n        });\n      });\n    }\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.clear();\n    window.location.reload(false);\n  };\n\n  const handleEdit = () => {\n    const toggle = !settingState.showEditBox;\n    setSettingState({\n      showEditBox: toggle\n    });\n  };\n\n  const editBox = settingState.showEditBox ? React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \" \", \"First Name: \" + settingState.firstname), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" \", \"Last Name: \" + settingState.lastname, \" \"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \" \", \"Primary Email Address: \" + settingState.email, \" \"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \" \", \"Email preferences: \" + settingState.outreach ? \"Subscribed to notifications and reminders\" : \"Not subscribed to notifications or reminders\", \" \")), React.createElement(AppBar, {\n    className: classes.enterBar,\n    position: \"static\",\n    color: \"default\",\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Done\"), React.createElement(Button, {\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Cancel\")))))) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \" \", \"First Name: \" + settingState.firstname), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \" \", \"Last Name: \" + settingState.lastname, \" \"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \" \", \"Primary Email Address: \" + settingState.email, \" \"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \" \", \"Email preferences: \" + settingState.outreach ? \"Subscribed to notifications and reminders\" : \"Not subscribed to notifications or reminders\", \" \")), React.createElement(AppBar, {\n    className: classes.enterBar,\n    position: \"static\",\n    color: \"default\",\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Logout\")))))));\n  return {\n    editBox\n  };\n}\n\nexport default withStyles(styles)(Settings);","map":{"version":3,"sources":["/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Content/Settings/Settings.js"],"names":["React","useState","useEffect","Fragment","Button","Paper","Grid","AppBar","Toolbar","Typography","withStyles","getUser","styles","theme","paper","maxWidth","margin","overflow","marginBottom","root","spacing","marginTop","marginLeft","enterBar","borderBottom","alignItems","Settings","props","classes","settingState","setSettingState","firstname","lastname","email","showEditBox","outreach","localStorage","getItem","then","res","user","data","handleLogout","clear","window","location","reload","handleEdit","toggle","editBox"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getUser } from '../../../../services/UserServices/userServices';\n\nconst styles = theme => ({\n    paper: {\n      maxWidth: 936,\n      margin: 'auto',\n      overflow: 'hidden',\n      marginBottom: '10px',\n    },\n      root: {\n        margin: theme.spacing(1),\n        marginTop: '12px',\n        marginLeft: '20px',\n    },\n    enterBar: {\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n        alignItems: 'flex-end',\n      },\n  });\n\nfunction Settings(props){\n    const {classes} =  props;\n\n    const [ settingState, setSettingState ] = useState({\n        firstname: '',\n        lastname: '',\n        email: '',\n        showEditBox: false,\n        outreach: false\n    });\n\n    useEffect(() => {\n        if(localStorage.getItem('uid')){\n          getUser(localStorage.getItem('uid')).then(res => {\n            const user=res.data[0];\n            if(res) setSettingState({firstname: user.firstname, lastname: user.lastname, email: user.email, outreach: user.outreach})\n          })\n        }\n      }, []);\n\n    const handleLogout = () => {\n        localStorage.clear();\n        window.location.reload(false);\n    }\n\n    const handleEdit = () => {\n        const toggle = !settingState.showEditBox;\n        setSettingState({showEditBox: toggle});\n    }\n\n    const editBox = settingState.showEditBox? (\n        <Paper className={classes.paper}>\n            <div className= {classes.root}>\n                <Typography > {\"First Name: \" + settingState.firstname}</ Typography>\n                <Typography> {\"Last Name: \" + settingState.lastname} </Typography>\n                <Typography> {\"Primary Email Address: \" + settingState.email} </Typography>\n                <Typography> {\"Email preferences: \" + settingState.outreach? \"Subscribed to notifications and reminders\": \"Not subscribed to notifications or reminders\"} </Typography>\n            </div>\n            <AppBar className={classes.enterBar} position=\"static\" color=\"default\" elevation={0}>\n                <Toolbar>\n                    <Grid container spacing={2}>\n                        <Grid item>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\">\n                                Done\n                            </Button>\n                            <Button\n                                variant=\"contained\">\n                                Cancel\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        </Paper>\n    ) : (\n        <Fragment>\n        <Paper className={classes.paper}>\n            <div className= {classes.root}>\n                <Typography > {\"First Name: \" + settingState.firstname}</ Typography>\n                <Typography> {\"Last Name: \" + settingState.lastname} </Typography>\n                <Typography> {\"Primary Email Address: \" + settingState.email} </Typography>\n                <Typography> {\"Email preferences: \" + settingState.outreach? \"Subscribed to notifications and reminders\": \"Not subscribed to notifications or reminders\"} </Typography>\n            </div>\n            <AppBar className={classes.enterBar} position=\"static\" color=\"default\" elevation={0}>\n                <Toolbar>\n                    <Grid container spacing={2}>\n                        <Grid item>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleEdit}>\n                                Edit\n                            </Button>\n                            <Button\n                                variant=\"contained\" \n                                onClick={handleLogout}>\n                                Logout\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        </Paper>\n        </Fragment>\n        \n    )\n    return (\n        {editBox}\n    )\n}\n\nexport default withStyles(styles)(Settings);"]},"metadata":{},"sourceType":"module"}