{"ast":null,"code":"import _slicedToArray from\"/Users/codeplus/Desktop/Cerebral/cerebral-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Axios from'axios';import AppBar from'@material-ui/core/AppBar';import Toolbar from'@material-ui/core/Toolbar';import Paper from'@material-ui/core/Paper';import Grid from'@material-ui/core/Grid';import Button from'@material-ui/core/Button';import TextField from'@material-ui/core/TextField';import{withStyles}from'@material-ui/core/styles';var styles=function styles(theme){return{paper:{maxWidth:936,margin:'auto',overflow:'hidden'},enterBar:{borderBottom:'1px solid rgba(0, 0, 0, 0.12)',alignItems:'center'},searchInput:{fontSize:theme.typography.fontSize},block:{display:'block'},root:{'& .MuiTextField-root':{margin:theme.spacing(1),width:'115ch'}}};};var handleAddEntry=function handleAddEntry(text){var tempDate=new Date();var date=tempDate.getFullYear()+'-'+(tempDate.getMonth()+1)+'-'+tempDate.getDate()+' '+tempDate.getHours()+':'+tempDate.getMinutes()+':'+tempDate.getSeconds();Axios({method:'post',url:'http://localhost:3001/api/entries/addEntry',data:{\"uid\":2,\"dates\":date,\"entry\":text}});};function Entries(props){var classes=props.classes;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];return React.createElement(Paper,{className:classes.paper},React.createElement(\"div\",{className:classes.root},React.createElement(TextField,{id:\"standard-multiline-static\",label:\"New Entry\",multiline:true,rows:\"10\",onChange:function onChange(event){return setText(event.target.value);}})),React.createElement(AppBar,{className:classes.enterBar,position:\"static\",color:\"default\",elevation:0},React.createElement(Toolbar,null,React.createElement(Grid,{container:true,spacing:2,alignItems:\"center\"},React.createElement(Grid,{item:true},React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:function onClick(){handleAddEntry(text);}},\"Add entry\"))))));}export default withStyles(styles)(Entries);","map":{"version":3,"sources":["/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Content/Entries/Entries.js"],"names":["React","useState","Axios","AppBar","Toolbar","Paper","Grid","Button","TextField","withStyles","styles","theme","paper","maxWidth","margin","overflow","enterBar","borderBottom","alignItems","searchInput","fontSize","typography","block","display","root","spacing","width","handleAddEntry","text","tempDate","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","method","url","data","Entries","props","classes","setText","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Axios from 'axios';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  enterBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n    alignItems: 'center',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '115ch',\n    },\n  },\n});\n\nconst handleAddEntry = (text) => {\n  var tempDate = new Date();\n  var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() +' '+ tempDate.getHours()+':'+ tempDate.getMinutes()+':'+ tempDate.getSeconds();\n  Axios({\n    method: 'post',\n    url: 'http://localhost:3001/api/entries/addEntry',\n    data: {\n      \"uid\": 2,\n      \"dates\": date,\n      \"entry\": text\n    }\n  });\n};\n\nfunction Entries(props) {\n  const { classes } = props;\n\n  const [text, setText] = useState(\"\");\n\n  return (\n    <Paper className={classes.paper}>\n      <div className={classes.root}>\n        <TextField\n          id=\"standard-multiline-static\"\n          label=\"New Entry\"\n          multiline\n          rows=\"10\"\n          onChange={(event)=> setText(event.target.value)}\n        />\n      </div>\n      <AppBar className={classes.enterBar} position=\"static\" color=\"default\" elevation={0}>\n        <Toolbar>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <Button\n                variant=\"contained\" \n                color=\"primary\" \n                onClick={() => {handleAddEntry(text)}}>\n                  Add entry\n              </Button>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </Paper>\n  );\n}\n\nEntries.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Entries);"]},"metadata":{},"sourceType":"module"}