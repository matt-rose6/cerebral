{"ast":null,"code":"var _jsxFileName = \"/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Content/Settings/Boxes/SettingsBox.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Typography, Checkbox, FormControlLabel } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getUser } from '../../../../../services/UserServices/userServices';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n    marginBottom: '10px'\n  },\n  root: {\n    margin: theme.spacing(1),\n    marginTop: '12px',\n    marginLeft: '20px'\n  },\n  enterBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n    alignItems: 'flex-end'\n  }\n});\n\nfunction SettingsBox(props) {\n  const {\n    classes\n  } = props;\n  const [settingBoxState, setBoxState] = useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    outreach: false\n  });\n  useEffect(() => {\n    if (localStorage.getItem('uid')) {\n      getUser(localStorage.getItem('uid')).then(res => {\n        const user = res.data[0];\n        if (res) setBoxState({\n          firstname: user.firstname,\n          lastname: user.lastname,\n          email: user.email,\n          outreach: user.outreach\n        });\n      });\n    }\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.clear();\n    window.location.reload(false);\n  };\n\n  return React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" \", \"First Name: \" + settingBoxState.firstname), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \" \", \"Last Name: \" + settingBoxState.lastname, \" \"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \" \", \"Primary Email Address: \" + settingBoxState.email, \" \"), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      color: \"primary\",\n      disabled: true,\n      checked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }),\n    label: \"Email preferences: \" + settingBoxState.outreach ? \"Subscribed to notifications and reminders\" : \"Not subscribed to notifications or reminders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(AppBar, {\n    className: classes.enterBar,\n    position: \"static\",\n    color: \"default\",\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: props.toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Logout\"))))));\n}\n\nexport default withStyles(styles)(SettingsBox);","map":{"version":3,"sources":["/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Content/Settings/Boxes/SettingsBox.js"],"names":["React","useState","useEffect","Fragment","Button","Paper","Grid","AppBar","Toolbar","Typography","Checkbox","FormControlLabel","withStyles","getUser","styles","theme","paper","maxWidth","margin","overflow","marginBottom","root","spacing","marginTop","marginLeft","enterBar","borderBottom","alignItems","SettingsBox","props","classes","settingBoxState","setBoxState","firstname","lastname","email","outreach","localStorage","getItem","then","res","user","data","handleLogout","clear","window","location","reload","toggle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,gBAA/B,QAAuD,mBAAvD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,mDAAxB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,GADL;AAELC,IAAAA,MAAM,EAAE,MAFH;AAGLC,IAAAA,QAAQ,EAAE,QAHL;AAILC,IAAAA,YAAY,EAAE;AAJT,GADc;AAOnBC,EAAAA,IAAI,EAAE;AACJH,IAAAA,MAAM,EAAEH,KAAK,CAACO,OAAN,CAAc,CAAd,CADJ;AAEJC,IAAAA,SAAS,EAAE,MAFP;AAGJC,IAAAA,UAAU,EAAE;AAHR,GAPa;AAYrBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAE,+BADR;AAENC,IAAAA,UAAU,EAAE;AAFN;AAZW,CAAL,CAApB;;AAkBA,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AACvB,QAAM;AAACC,IAAAA;AAAD,MAAaD,KAAnB;AAEA,QAAM,CAAEE,eAAF,EAAmBC,WAAnB,IAAmC/B,QAAQ,CAAC;AAC9CgC,IAAAA,SAAS,EAAE,EADmC;AAE9CC,IAAAA,QAAQ,EAAE,EAFoC;AAG9CC,IAAAA,KAAK,EAAE,EAHuC;AAI9CC,IAAAA,QAAQ,EAAE;AAJoC,GAAD,CAAjD;AAOAlC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGmC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAH,EAA+B;AAC7BzB,MAAAA,OAAO,CAACwB,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAD,CAAP,CAAqCC,IAArC,CAA0CC,GAAG,IAAI;AAC/C,cAAMC,IAAI,GAACD,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAX;AACA,YAAGF,GAAH,EAAQR,WAAW,CAAC;AAACC,UAAAA,SAAS,EAAEQ,IAAI,CAACR,SAAjB;AAA4BC,UAAAA,QAAQ,EAAEO,IAAI,CAACP,QAA3C;AAAqDC,UAAAA,KAAK,EAAEM,IAAI,CAACN,KAAjE;AAAwEC,UAAAA,QAAQ,EAAEK,IAAI,CAACL;AAAvF,SAAD,CAAX;AACT,OAHD;AAID;AACF,GAPM,EAOJ,EAPI,CAAT;;AASA,QAAMO,YAAY,GAAG,MAAM;AACvBN,IAAAA,YAAY,CAACO,KAAb;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACH,GAHD;;AAKA,SACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEjB,OAAO,CAACd,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAGc,OAAO,CAACT,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAe,iBAAiBU,eAAe,CAACE,SAAhD,CADJ,EAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAc,gBAAgBF,eAAe,CAACG,QAA9C,MAFJ,EAGI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAc,4BAA4BH,eAAe,CAACI,KAA1D,MAHJ,EAKI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,SAAhB;AAA0B,MAAA,QAAQ,MAAlC;AAAmC,MAAA,OAAO,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B;AAA0E,IAAA,KAAK,EAAE,wBAAwBJ,eAAe,CAACK,QAAxC,GAAkD,2CAAlD,GAA+F,8CAAhL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,EASI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEN,OAAO,CAACL,QAA3B;AAAqC,IAAA,QAAQ,EAAC,QAA9C;AAAuD,IAAA,KAAK,EAAC,SAA7D;AAAuE,IAAA,SAAS,EAAE,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,OAAO,EAAEI,KAAK,CAACmB,MAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAOI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,OAAO,EAAEL,YAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CADJ,CADJ,CADJ,CATJ,CADJ;AA+BH;;AAED,eAAe/B,UAAU,CAACE,MAAD,CAAV,CAAmBc,WAAnB,CAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Typography, Checkbox, FormControlLabel } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getUser } from '../../../../../services/UserServices/userServices';\n\nconst styles = theme => ({\n    paper: {\n      maxWidth: 936,\n      margin: 'auto',\n      overflow: 'hidden',\n      marginBottom: '10px',\n    },\n      root: {\n        margin: theme.spacing(1),\n        marginTop: '12px',\n        marginLeft: '20px',\n    },\n    enterBar: {\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n        alignItems: 'flex-end',\n      },\n  });\n\nfunction SettingsBox(props){\n    const {classes} =  props;\n\n    const [ settingBoxState, setBoxState ] = useState({\n        firstname: '',\n        lastname: '',\n        email: '',\n        outreach: false\n    });\n\n    useEffect(() => {\n        if(localStorage.getItem('uid')){\n          getUser(localStorage.getItem('uid')).then(res => {\n            const user=res.data[0];\n            if(res) setBoxState({firstname: user.firstname, lastname: user.lastname, email: user.email, outreach: user.outreach})\n          })\n        }\n      }, []);\n\n    const handleLogout = () => {\n        localStorage.clear();\n        window.location.reload(false);\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <div className= {classes.root}>\n                <Typography > {\"First Name: \" + settingBoxState.firstname}</ Typography>\n                <Typography> {\"Last Name: \" + settingBoxState.lastname} </Typography>\n                <Typography> {\"Primary Email Address: \" + settingBoxState.email} </Typography>\n                \n                <FormControlLabel control={<Checkbox color=\"primary\" disabled checked />} label={\"Email preferences: \" + settingBoxState.outreach? \"Subscribed to notifications and reminders\": \"Not subscribed to notifications or reminders\"} />\n                \n            </div>\n            <AppBar className={classes.enterBar} position=\"static\" color=\"default\" elevation={0}>\n                <Toolbar>\n                    <Grid container spacing={2}>\n                        <Grid item>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={props.toggle}>\n                                Edit\n                            </Button>\n                            <Button\n                                variant=\"contained\" \n                                onClick={handleLogout}>\n                                Logout\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        </Paper>    \n    )\n}\n\nexport default withStyles(styles)(SettingsBox);"]},"metadata":{},"sourceType":"module"}