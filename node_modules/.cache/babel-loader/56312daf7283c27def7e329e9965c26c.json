{"ast":null,"code":"var _jsxFileName = \"/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Content/Timeline/Timeline.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { getEntries } from '../../../../services/EntryServices/entryServices';\nimport Post from './Post/Post';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n    backgroundColor: '#f2f2f2'\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)'\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize\n  },\n  block: {\n    display: 'block'\n  },\n  contentWrapper: {\n    margin: '40px 16px'\n  }\n});\n\nfunction Content(props) {\n  const {\n    classes\n  } = props;\n  const [timelineState, setTimelineState] = useState({\n    posts: []\n  });\n  useEffect(() => {\n    if (localStorage.getItem('uid')) {\n      getEntries(localStorage.getItem('uid')).then(res => {\n        if (res && res.data.length > 0) {\n          //reverse the array so most recent entries show up first\n          setTimelineState({\n            posts: res.data.reverse()\n          });\n        }\n      });\n    }\n  }, []);\n  let lst = timelineState.posts.length === 0 ? React.createElement(Typography, {\n    color: \"textSecondary\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"No journal entries yet\") : timelineState.posts.map((child, index) => {\n    return React.createElement(Post, {\n      text: child.entry,\n      date: child.dates,\n      key: child.dates,\n      index: index,\n      deletePost: deletePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n  });\n\n  const deletePost = index => {};\n\n  return React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    className: classes.searchBar,\n    position: \"static\",\n    color: \"default\",\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(SearchIcon, {\n    className: classes.block,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    placeholder: \"Search by date\",\n    InputProps: {\n      disableUnderline: true,\n      className: classes.searchInput\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    title: \"Reload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: () => window.location.reload(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(RefreshIcon, {\n    className: classes.block,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))))))), React.createElement(\"div\", {\n    className: classes.contentWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, lst));\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Content);","map":{"version":3,"sources":["/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Content/Timeline/Timeline.js"],"names":["React","useState","useEffect","PropTypes","AppBar","Toolbar","Typography","Paper","Grid","TextField","Tooltip","IconButton","withStyles","SearchIcon","RefreshIcon","getEntries","Post","styles","theme","paper","maxWidth","margin","overflow","backgroundColor","searchBar","borderBottom","searchInput","fontSize","typography","block","display","contentWrapper","Content","props","classes","timelineState","setTimelineState","posts","localStorage","getItem","then","res","data","length","reverse","lst","map","child","index","entry","dates","deletePost","disableUnderline","className","window","location","reload","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { getEntries } from '../../../../services/EntryServices/entryServices';\nimport Post from './Post/Post';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n    backgroundColor: '#f2f2f2',\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  contentWrapper: {\n    margin: '40px 16px',\n  },\n});\n\nfunction Content(props) {\n  const { classes } = props;\n\n  const [ timelineState, setTimelineState ] = useState({\n    posts: []\n  });\n\n  useEffect(()=> {\n    if(localStorage.getItem('uid')){\n      getEntries(localStorage.getItem('uid')).then(res => {\n        if(res && res.data.length > 0) {\n          //reverse the array so most recent entries show up first\n          setTimelineState({posts: res.data.reverse()})\n        }\n      })\n    }\n  }, []);\n\n  let lst = timelineState.posts.length===0? (\n    <Typography color=\"textSecondary\" align=\"center\">\n      No journal entries yet\n    </Typography>\n  ) : \n  (\n    timelineState.posts.map((child, index)=> {\n      return <Post text={child.entry} date={child.dates} key={child.dates} index={index} deletePost={deletePost}/>\n    })\n  )\n\n  const deletePost = (index) => {\n\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\n        <Toolbar>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <SearchIcon className={classes.block} color=\"inherit\" />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                fullWidth\n                placeholder=\"Search by date\"\n                InputProps={{\n                  disableUnderline: true,\n                  className: classes.searchInput,\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Reload\">\n                <IconButton onClick={()=> window.location.reload(false)}>\n                  <RefreshIcon className={classes.block} color=\"inherit\"/>\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.contentWrapper}>\n        {lst}\n      </div>\n    </Paper>\n  );\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Content);"]},"metadata":{},"sourceType":"module"}