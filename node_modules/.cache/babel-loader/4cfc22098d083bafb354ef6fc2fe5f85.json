{"ast":null,"code":"var _jsxFileName = \"/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Content/Settings/Boxes/EditBox.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { TextField, Checkbox } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getUser } from '../../../../../services/UserServices/userServices';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n    marginBottom: '10px'\n  },\n  root: {\n    margin: theme.spacing(1),\n    marginTop: '12px',\n    marginLeft: '20px'\n  },\n  enterBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n    alignItems: 'flex-end'\n  }\n});\n\nfunction EditBox(props) {\n  const {\n    classes\n  } = props;\n  const [editBoxState, setBoxState] = useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    outreach: false\n  });\n  useEffect(() => {\n    if (localStorage.getItem('uid')) {\n      getUser(localStorage.getItem('uid')).then(res => {\n        const user = res.data[0];\n        if (res) setBoxState({\n          firstname: user.firstname,\n          lastname: user.lastname,\n          email: user.email,\n          outreach: user.outreach\n        });\n      });\n    }\n  }, []);\n  return React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: editBoxState.firstname || '',\n    fullWidth: true,\n    onChange: event => setBoxState({ ...editBoxState,\n      firstname: event.target.value\n    }) //double check this syntax\n    ,\n    label: \"First Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    value: editBoxState.lastname || '',\n    fullWidth: true,\n    onChange: event => setBoxState({ ...editBoxState,\n      lastname: event.target.value\n    }),\n    label: \"Last Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    value: editBoxState.email || '',\n    fullWidth: true,\n    color: \"primary\",\n    onChange: event => setBoxState({ ...editBoxState,\n      outreach: event.target.value\n    }),\n    label: \"Email Address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(AppBar, {\n    className: classes.enterBar,\n    position: \"static\",\n    color: \"default\",\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Done\"), React.createElement(Button, {\n    variant: \"contained\",\n    onClick: props.toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Cancel\"))))));\n}\n\nexport default withStyles(styles)(EditBox);","map":{"version":3,"sources":["/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Content/Settings/Boxes/EditBox.js"],"names":["React","useState","useEffect","Fragment","Button","Paper","Grid","AppBar","Toolbar","TextField","Checkbox","withStyles","getUser","styles","theme","paper","maxWidth","margin","overflow","marginBottom","root","spacing","marginTop","marginLeft","enterBar","borderBottom","alignItems","EditBox","props","classes","editBoxState","setBoxState","firstname","lastname","email","outreach","localStorage","getItem","then","res","user","data","event","target","value","toggle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { TextField, Checkbox } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getUser } from '../../../../../services/UserServices/userServices';\n\nconst styles = theme => ({\n    paper: {\n      maxWidth: 936,\n      margin: 'auto',\n      overflow: 'hidden',\n      marginBottom: '10px',\n    },\n      root: {\n        margin: theme.spacing(1),\n        marginTop: '12px',\n        marginLeft: '20px',\n    },\n    enterBar: {\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n        alignItems: 'flex-end',\n      },\n  });\n\nfunction EditBox(props){\n    const {classes} =  props;\n\n    const [ editBoxState, setBoxState ] = useState({\n        firstname: '',\n        lastname: '',\n        email: '',\n        outreach: false\n    });\n\n    useEffect(() => {\n        if(localStorage.getItem('uid')){\n          getUser(localStorage.getItem('uid')).then(res => {\n            const user=res.data[0];\n            if(res) setBoxState({firstname: user.firstname, lastname: user.lastname, email: user.email, outreach: user.outreach})\n          })\n        }\n    }, []);\n\n    return (\n        <Paper className={classes.paper}>\n            <div className= {classes.root}>\n                <TextField value={editBoxState.firstname || ''} \n                    fullWidth \n                    onChange={(event)=>setBoxState({...editBoxState, firstname: event.target.value})} //double check this syntax\n                    label=\"First Name\"/> \n                <TextField value={editBoxState.lastname || ''} \n                    fullWidth \n                    onChange={(event)=>setBoxState({...editBoxState, lastname: event.target.value})}\n                    label=\"Last Name\"/>\n                <TextField value={editBoxState.email || ''} \n                    fullWidth\n                    color=\"primary\"\n                    onChange={(event)=>setBoxState({...editBoxState, outreach: event.target.value})}\n                    label=\"Email Address\"/>  \n                {/* <TextField value={editBoxState.outreach} \n                    fullWidth onChange={(event)=>setBoxState({firstname: event.target.value})}\n                    label=\"\"/>  */}\n            </div>\n            <AppBar className={classes.enterBar} position=\"static\" color=\"default\" elevation={0}>\n                <Toolbar>\n                    <Grid container spacing={2}>\n                        <Grid item>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\">\n                                Done\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                onClick={props.toggle}>\n                                Cancel\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        </Paper>\n    )\n}\n\nexport default withStyles(styles)(EditBox);"]},"metadata":{},"sourceType":"module"}