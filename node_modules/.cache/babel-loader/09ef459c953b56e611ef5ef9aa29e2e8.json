{"ast":null,"code":"var _jsxFileName = \"/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Navigator/ListItemLink/ListItemLink.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { Link } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withRouter } from 'react-router'; //import {compose} from 'recompose';\n\nconst styles = theme => ({\n  item: {\n    paddingTop: 1,\n    paddingBottom: 1,\n    color: 'rgba(255, 255, 255, 0.7)',\n    '&:hover,&:focus': {\n      backgroundColor: 'rgba(255, 255, 255, 0.08)'\n    }\n  },\n  itemIcon: {\n    minWidth: 'auto',\n    marginRight: theme.spacing(2)\n  },\n  itemActiveItem: {\n    color: '#4fc3f7'\n  },\n  itemPrimary: {\n    fontSize: 'inherit'\n  }\n});\n\nconst ListItemLink = props => {\n  const {\n    classes,\n    location: {\n      pathname\n    },\n    staticContext,\n    ...other\n  } = props;\n  const CustomLink = React.useMemo(() => React.forwardRef((linkProps, ref) => React.createElement(Link, Object.assign({\n    ref: ref,\n    to: props.to\n  }, linkProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))), [props.to]);\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    component: CustomLink,\n    key: props.childId,\n    className: clsx(classes.item, pathname === props.to && classes.itemActiveItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    className: classes.itemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.icon), React.createElement(ListItemText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \" \", props.text, \" \")));\n};\n\nexport default ListItemLink;","map":{"version":3,"sources":["/Users/codeplus/Desktop/Cerebral/cerebral-frontend/src/pages/Home/Navigator/ListItemLink/ListItemLink.js"],"names":["React","clsx","Link","ListItem","ListItemIcon","ListItemText","withRouter","styles","theme","item","paddingTop","paddingBottom","color","backgroundColor","itemIcon","minWidth","marginRight","spacing","itemActiveItem","itemPrimary","fontSize","ListItemLink","props","classes","location","pathname","staticContext","other","CustomLink","useMemo","forwardRef","linkProps","ref","to","childId","icon","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAAQC,UAAR,QAAyB,cAAzB,C,CACA;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,CADV;AAEFC,IAAAA,aAAa,EAAE,CAFb;AAGFC,IAAAA,KAAK,EAAE,0BAHL;AAIF,uBAAmB;AACjBC,MAAAA,eAAe,EAAE;AADA;AAJjB,GADe;AASrBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,MADJ;AAENC,IAAAA,WAAW,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd;AAFP,GATW;AAarBC,EAAAA,cAAc,EAAE;AAChBN,IAAAA,KAAK,EAAE;AADS,GAbK;AAgBrBO,EAAAA,WAAW,EAAE;AACbC,IAAAA,QAAQ,EAAE;AADG;AAhBQ,CAAL,CAApB;;AAqBA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAQ,EAAC;AAACC,MAAAA;AAAD,KAApB;AAAgCC,IAAAA,aAAhC;AAA+C,OAAGC;AAAlD,MAA4DL,KAAlE;AACA,QAAMM,UAAU,GAAG5B,KAAK,CAAC6B,OAAN,CACf,MACA7B,KAAK,CAAC8B,UAAN,CAAiB,CAACC,SAAD,EAAYC,GAAZ,KACb,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,GAAX;AAAgB,IAAA,EAAE,EAAEV,KAAK,CAACW;AAA1B,KAAkCF,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CAFe,EAKf,CAACT,KAAK,CAACW,EAAP,CALe,CAAnB;AAOA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,SAAS,EAAEL,UAA5B;AAAwC,IAAA,GAAG,EAAEN,KAAK,CAACY,OAAnD;AAA4D,IAAA,SAAS,EAAEjC,IAAI,CAACsB,OAAO,CAACd,IAAT,EAAegB,QAAQ,KAAGH,KAAK,CAACW,EAAjB,IAAuBV,OAAO,CAACL,cAA9C,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEK,OAAO,CAACT,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CQ,KAAK,CAACa,IAAlD,CADJ,EAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAgBb,KAAK,CAACc,IAAtB,MAFJ,CADA,CADJ;AAQH,CAjBD;;AAmBA,eAAef,YAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport {Link} from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {withRouter} from 'react-router';\n//import {compose} from 'recompose';\n\nconst styles = theme => ({\n    item: {\n        paddingTop: 1,\n        paddingBottom: 1,\n        color: 'rgba(255, 255, 255, 0.7)',\n        '&:hover,&:focus': {\n          backgroundColor: 'rgba(255, 255, 255, 0.08)',\n        },\n    },\n    itemIcon: {\n        minWidth: 'auto',\n        marginRight: theme.spacing(2),\n    },\n    itemActiveItem: {\n    color: '#4fc3f7',\n    },\n    itemPrimary: {\n    fontSize: 'inherit',\n    },\n})\n\nconst ListItemLink = (props) => {\n    const { classes, location:{pathname}, staticContext, ...other } = props;\n    const CustomLink = React.useMemo(\n        () =>\n        React.forwardRef((linkProps, ref) => (\n            <Link ref={ref} to={props.to} {...linkProps} />\n        )),\n        [props.to],\n    );\n    return (\n        <li>\n        <ListItem button component={CustomLink} key={props.childId} className={clsx(classes.item, pathname===props.to && classes.itemActiveItem)}>\n            <ListItemIcon className={classes.itemIcon}>{props.icon}</ListItemIcon>\n            <ListItemText> {props.text} </ListItemText>\n        </ListItem>\n        </li>\n    );\n}\n\nexport default ListItemLink;"]},"metadata":{},"sourceType":"module"}